@page "/hotel/rooms"
@inject ILocalStorageService localStorage
@inject IJSRuntime jsRuntime
@inject IHotelRoomService hotelRoomService
@inject NavigationManager navigationManager

@if (Rooms != null && Rooms.Any())
{
    <EditForm Model="HomeModel" OnValidSubmit="SaveBookingInfo" class="bg-light">

        <div class="pt-3 pb-2 px-5 mx-1 mx-md-0 bg-secondary">
            <DataAnnotationsValidator />
            <div class="row px-3 mx-3">
                <div class="col-6 col-md-4">
                    <div class="form-group">
                        <label class="text-warning">Check in Date</label>
                        <InputDate @bind-Value="HomeModel.StartDate" class="form-control" />
                    </div>
                </div>
                <div class="col-6 col-md-4">
                    <div class="form-group">
                        <label class="text-warning">Check Out Date</label>
                        <input @bind="HomeModel.EndDate" disabled="disabled" readonly="readonly" type="date" class="form-control" />
                    </div>
                </div>
                <div class=" col-4 col-md-2">
                    <div class="form-group">
                        <label class="text-warning">No. of nights</label>
                        <select @bind="HomeModel.NoOfNights" class="form-control">
                            <option value="Select" selected disabled="disabled">(Select No. Of Nights)</option>
                            <!--Adds 1-10 values in select input for number of nights. -->
                            @for (var i = 1; i <= 10; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="col-8 col-md-2">
                    <div class="form-group" style="margin-top: 1.9rem !important;">
                        @if (IsProcessing) //shows processing icon instead of button while processing
                        {
                            <button class="btn btn-success btn-block form-control"><i class="fade fa-spin fa-spinner"></i>Processing...</button>
                        }
                        else
                        {
                            <input type="submit" value="Update" class="btn btn-success btn-block form-control" />
                        }
                    </div>
                </div>
            </div>
        </div>
    </EditForm>

    <div class="mt-4 mx-4 px-0 px-md-5 mx-md-5">

        @foreach (var room in Rooms)
        {

            <div class="row p-2 my-3 " style="border-radius: 20px; border: 1px solid #ec9a13"> @* Changed color here*@
                <div class="col-12 col-lg-3 col-md-4">
                    <div id="carouselExampleIndicators_@room.Id" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-ride="carousel">
                        <ol class="carousel-indicators">
                            @{
                                int imageIndex = 0; //counter for indicator buttons
                                int innerImageIndex = 0; //counter for images
                            }
                            <!--Sets the images in the Bootstrap carousel with indicators for each room-->
                            @foreach (var image in room.HotelRoomImages)
                            {
                                if (imageIndex == 0)
                                {
                                    <li data-target="#carouselExampleIndicators_@room.Id" data-slide-to="imageIndex" class="active"></li>
                                }
                                else
                                {
                                    <li data-target="#carouselExampleIndicators_@room.Id" data-slide-to="imageIndex"></li>
                                }
                                imageIndex++;
                            }


                        </ol>
                        <div class="carousel-inner">
                            @foreach(var image in room.HotelRoomImages)
                    {
                        if(innerImageIndex == 0)
                        {
                            <div class="carousel-item active">
                                <img class="d-block w-100" style="border-radius:20px;" src="@image.RoomImageUrl" alt="First slide">
                            </div>
                        }
                        else
                        {
                        <div class="carousel-item">
                            <img class="d-block w-100" src="@image.RoomImageUrl" alt="Not first slide">
                        </div>
                        }
                                innerImageIndex++;
                    }
                        </div>
                        <!--Sets the prev and next button on image carousel-->
                        <a class="carousel-control-prev" href="#carouselExampleIndicators_@room.Id" role="button" data-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carouselExampleIndicators_@room.Id" role="button" data-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>
                </div>
                <div class="col-12 col-lg-9 col-md-8">
                    <div class="row pt-3">
                        <div class="col-12 col-lg-8">
                            <p class="card-title text-warning" style="font-size:xx-large">@room.Name</p>
                            <p class="card-text">
                                @((MarkupString)room.Details)
                            </p>
                        </div>
                        <div class="col-12 col-lg-4">
                            <div class="row pb-3 pt-2">
                                <div class="col-12 col-lg-11 offset-lg-1">
                                    @if (room.IsBooked)
                                    {
                                        <button disabled class="btn btn-secondary btn-block">Sold Out</button>
                                    }
                                    else
                                    {
                                        <a href="@($"hotel/room-details/{room.Id}")" class="btn btn-success btn-block">Book</a>

                                    }

                                </div>
                            </div>
                            <div class="row ">
                                <div class="col-12 pb-5">
                                    <span class="float-right">
                                        <span class="float-right">Max Occupancy : @room.Occupancy adults </span><br />
                                        <span class="float-right pt-1">Villa Size : @room.SqFt sqft</span><br />
                                        <h4 class="text-warning font-weight-bold pt-4">USD <span style="border-bottom:1px solid #ff6a00">@room.TotalAmount.ToString("c")</span></h4>
                                        <span class="float-right">Cost for @room.TotalDays nights</span>
                                    </span>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
}
else
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/orange.gif" />
    </div>
}
@code {
    private HomeVM HomeModel { get; set; } = new HomeVM();  //HomeVM is a call that stores user input on home screen (Start, End, noNights)
    public IEnumerable<HotelRoomDTO> Rooms { get; set; } = new List<HotelRoomDTO>();
    private bool IsProcessing { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (await localStorage.GetItemAsync<HomeVM>(SD.Local_InitialBoking) != null)
            {
                HomeModel = await localStorage.GetItemAsync<HomeVM>(SD.Local_InitialBoking);
                // Console.WriteLine($"Start: {HomeModel.StartDate} , End: {HomeModel.EndDate} , NoNights: {HomeModel.NoOfNights} ");
            }
            else
            {
                HomeModel.NoOfNights = 1;
            }
            await LoadRooms();
        }
        catch (Exception e)
        {

            await jsRuntime.ToastrError(e.Message);

        }

    }

    private async Task LoadRooms()
    {
        //hotelRoomServices gets all the rooms, sets image urls, sets isBooked bool field and returns hotelRoomDTO's.
        Rooms = await hotelRoomService.GetHotelRooms(HomeModel.StartDate.ToString("MM/dd/yyyy"), HomeModel.EndDate.ToString("MM/dd/yyyy"));

        //Sets the total days into the DTO and calculates the total amount for later use.
        foreach (var room in Rooms)
        {
            room.TotalDays = HomeModel.NoOfNights;
            room.TotalAmount = HomeModel.NoOfNights * room.RegularRate;

        }
    }

    //Updates the hotelRooms page if you edit the start, end, and noNights inputs on page header.
    private async Task SaveBookingInfo()
    {
        try
        {
            //updates the homeModel with new inputs and resets the localstorage value. Then reloads view.
            IsProcessing = true;
            HomeModel.EndDate = HomeModel.StartDate.AddDays(HomeModel.NoOfNights);
            await localStorage.SetItemAsync(SD.Local_InitialBoking, HomeModel);
            // navigationManager.NavigateTo("hotel/rooms", true);  //also works but there was a load
            await LoadRooms();
            IsProcessing = false;


        }
        catch (Exception e)
        {
            await jsRuntime.ToastrError(e.Message);
        }
    }
}
